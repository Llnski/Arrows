#define PI 3.14159 
#define sz 0.05 
float plot(vec2 st, float pct){

    //return (1.-step(sz,v))+step(sz,v)*(smoothstep( pct-0.02, pct, st.y) -
          //smoothstep( pct, pct+0.02, st.y)); //ah so it fixes the value between these two y values
    return (smoothstep( pct-0.01, pct, st.y) -
          smoothstep( pct, pct+0.01, st.y)); //ah so it fixes the value between these two y values
}
float circle(in vec2 _st, in float _radius){
    vec2 dist = _st-vec2(0.5);
	return 1.-smoothstep(_radius-(_radius*0.01),
                         _radius+(_radius*0.01),
                         dot(dist,dist)*4.0);
}

float getTheta(vec2 st, vec2 point, vec2 origin){
    float deg = 0.07;
    vec2 dist = st-point;
    float dt = dot(st + origin, point+origin);
    float theta = acos(dt / (length(st + origin)*length(point + origin)));
    return  1.-step(0.1-deg, theta);
}

float gt(vec2 st, vec2 origin){
    float deg = 0.08;
    float a = origin.x-st.x;
    float o = origin.y-st.y; 
    float theta = atan(o/a);
    return theta;
    }

float getR(vec2 st, float theta){
    float deg = 0.005;
    float distCoeff = 0.1;
    float r = theta;
    float dist = dot(st + vec2(-0.5), st + vec2(-0.5));
    return ((step(r*distCoeff-deg, dist)
    -step(r*distCoeff+deg, dist)))*r;
}
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 st = fragCoord.xy / iResolution.xy;
    float th = getTheta(st, vec2(st), vec2(-0.5, -0.5));
    th = gt(st, vec2(0.5));
    float r = getR(st, th);
    vec3 color = vec3(r);
    fragColor = vec4(color, 1.);

}

     //vec2 toCenter = vec2(0.5)-st;
     //pct = length(toCenter);

     //vec2 tC = vec2(0.5)-st;
     //pct = sqrt(tC.x*tC.x+tC.y*tC.y);